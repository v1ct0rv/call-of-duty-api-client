{"version":3,"sources":["components/Table.js","components/graphql.js","App.js","reportWebVitals.js","index.js"],"names":["team","client","ApolloClient","uri","cache","InMemoryCache","getBrStats","gql","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","tableColumnConfig","title","field","type","render","rowData","br","kdRatio","toFixed","defaultSort","winsPercent","gamesPerWin","parsed","seconds","Number","d","Math","floor","h","m","s","secondsToDhms","timePlayed","className","killsPerGame","killsPerMin","sorting","remoteData","query","console","log","variables","page","perPage","sort","resolveSort","filter","resolveFilter","then","res","dir","data","JSON","parse","stringify","brStatPagination","items","totalCount","count","orderBy","orderDirection","toUpperCase","replace","_operators","date","gte","Date","toISOString","substring","teams","in","toLowerCase","search","username","regex","Table","icons","columns","options","toolbar","draggable","pageSize","thirdSortClick","exportButton","App","style","width","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63a35f4d.chunk.js","sourcesContent":["import React,{forwardRef} from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { client, getBrStats } from \"./graphql\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst tableColumnConfig = [{\n    title: 'User name',\n    field: 'username',\n  },\n  // {\n  //   title: 'Platform',\n  //   field: 'platform',\n  //   sorting: false,\n  // },\n  {\n    title: 'Wins',\n    field: 'br.wins',\n    type: 'numeric',\n  },\n  {\n    title: 'KD',\n    field: 'br.kdRatio',\n    type: 'numeric',\n    render: rowData => rowData.br.kdRatio.toFixed(2),\n    defaultSort: 'desc',\n  },\n  {\n    title: 'Games',\n    field: 'br.gamesPlayed',\n    type: 'numeric',\n  },\n  {\n    title: '% Wins',\n    field: 'br.winsPercent',\n    type: 'numeric',\n    render: rowData => rowData.br.winsPercent.toFixed(2),\n  },\n  {\n    title: 'Games x Win',\n    field: 'br.gamesPerWin',\n    type: 'numeric',\n    render: rowData => rowData.br.gamesPerWin.toFixed(2),\n  },\n  {\n    title: 'Time Played',\n    field: 'br.timePlayed',\n    type: 'numeric',\n    render: rowData => {\n      const parsed = secondsToDhms(rowData.br.timePlayed)\n      return <div>{parsed.d}<span className=\"small\">D </span>{parsed.h}<span className=\"small\">H </span>{parsed.m}<span className=\"small\">MIN </span></div>\n      },\n  },\n  {\n    title: 'Kills',\n    field: 'br.kills',\n    type: 'numeric',\n  },\n  {\n    title: 'Deaths',\n    field: 'br.deaths',\n    type: 'numeric',\n  },\n  {\n    title: 'Kills x Game',\n    field: 'br.killsPerGame',\n    type: 'numeric',\n    render: rowData => rowData.br.killsPerGame.toFixed(2),\n  },\n  {\n    title: 'Kills x Min',\n    field: 'br.killsPerMin',\n    type: 'numeric',\n    render: rowData => rowData.br.killsPerMin.toFixed(2),\n  },\n  {\n    title: 'Top 5',\n    field: 'br.topFive',\n    type: 'numeric',\n  },\n  {\n    title: 'Top 10',\n    field: 'br.topTen',\n    type: 'numeric',\n  },\n  {\n    title: 'Top 25',\n    field: 'br.topTwentyFive',\n    type: 'numeric',\n  },\n  {\n    title: 'LastUpdate',\n    field: 'lastUpdate',\n    type: 'time',\n    sorting: false,\n  }\n]\n\nlet team;\n\nconst Table = (props)=>{\n  team = props.team\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        columns={tableColumnConfig}\n        data={remoteData}\n        title={team + \" Team\"}\n        options={{\n          toolbar: true,\n          sorting: true,\n          draggable: false,\n          pageSize: 20,\n          thirdSortClick: false,\n          exportButton: true\n        }}\n      />\n    </div>\n  )\n}\n\nconst remoteData = (query) => {\n  console.log(\"Query object - \", query)\n  return client.query({\n    query: getBrStats,\n    variables: {\n      page: 0,\n      perPage: 50,\n      sort: resolveSort(query),\n      filter: resolveFilter(query),\n    }\n  }).then((res) => {\n    console.dir(query)\n    return {\n      data: JSON.parse(JSON.stringify(res.data.brStatPagination.items)), // this map is to avoid the error Cannot add property tableData, object is not extensible\n      page: query.page,\n      totalCount: res.data.brStatPagination.count\n    }\n  })\n}\n\nfunction resolveSort(query) {\n  if(!query.orderBy) return \"BR__KDRATIO_DESC\"\n\n  if(query.orderDirection === 'asc') {\n    return `${query.orderBy.field.toUpperCase().replace('.', '__')}_ASC`\n  }\n  return `${query.orderBy.field.toUpperCase().replace('.', '__')}_DESC`\n}\n\nfunction resolveFilter(query) {\n  let filter = {\n    _operators: {\n      date: {\n        gte: new Date().toISOString().substring(0, 10) // UTC Date\n      },\n      teams: {\n        in: team.toLowerCase()\n      }\n    }\n  }\n\n  if(!query.search || query.search === '') return filter\n\n  filter._operators.username = {\n    regex: query.search\n  }\n\n  return filter\n}\n\nfunction secondsToDhms(seconds) {\n  seconds = Number(seconds);\n  var d = Math.floor(seconds / (3600*24));\n  var h = Math.floor(seconds % (3600*24) / 3600);\n  var m = Math.floor(seconds % 3600 / 60);\n  var s = Math.floor(seconds % 60);\n\n  return {\n    d,\n    h,\n    m,\n    s\n  }\n}\n\nexport default Table;\n","import {\n  ApolloClient,\n  InMemoryCache,\n  gql,\n} from \"@apollo/client\";\n\nexport const client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nexport const getBrStats = gql`\n  query($page: Int, $perPage: Int, $sort: SortFindManybrstatsInput, $filter:  FilterFindManybrstatsInput){\n    brStatPagination(page: $page, perPage: $perPage, sort: $sort, filter: $filter) {\n      count\n      pageInfo {\n        pageCount\n        itemCount\n        hasNextPage\n        hasPreviousPage\n      }\n      items {\n        lastUpdate\n        platform\n        username\n        teams\n        br {\n          wins\n          kills\n          deaths\n          kdRatio\n          timePlayed\n          gamesPlayed\n          downs\n          revives\n          scorePerMinute\n          topFive\n          topTen\n          topTwentyFive\n          winsPercent\n          killsPerGame\n          gamesPerWin\n          killsPerMin\n        }\n      }\n    }\n  }\n`;\n","import './App.css';\nimport Table from \"./components/Table\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{width:'80%',margin:\"40px auto\"}}>\n        <Table team=\"Hackzone\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}